name: "CI: Run tests"
on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [develop, master]

jobs:
  checkout:
    runs-on: ubuntu-latest
    outputs:
      repository-name: ${{ steps.set-env.outputs.repository-name }}
    container:
      image: usdotfhwastoldev/autoware.ai:develop
      options: "--user root"
    steps:
    - name: Set Variables
      id: set-env
      run: echo "repository-name=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV
    - name: Checkout Repository
      uses: actions/checkout@v3.3.0
      with:
        fetch-depth: 0
        path: src/${{ github.event.repository.name }}

  set-environment:
    needs: checkout
    runs-on: ubuntu-latest
    container:
      image: usdotfhwastoldev/autoware.ai:develop
      options: "--user root"
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3.3.0
      with:
        fetch-depth: 0
        path: src/${{ needs.checkout.outputs.repository-name }}
    - name: Move source code
      run: mv $GITHUB_WORKSPACE/src /opt/carma/
    - name: Checkout dependencies
      run: |
        source "/home/carma/.base-image/init-env.sh"
        ./src/${{ needs.checkout.outputs.repository-name }}/docker/checkout.bash -r /opt/carma/
    - name: Install external dependencies
      run: sudo bash /opt/carma/src/multiple_object_tracking/scripts/install_dependencies.sh

  build-ROS1:
    needs: set-environment
    runs-on: ubuntu-latest
    container:
      image: usdotfhwastoldev/autoware.ai:develop
      options: "--user root"
    steps:
    - name: Build ROS1
      run: |
        source "/home/carma/.base-image/init-env.sh"
        PACKAGES=$(find /opt/carma -maxdepth 2 -type f -name package.xml | sed 's/\.\///' | cut -d/ -f1)
        sed -i 's/colcon build /colcon build --packages-skip novatel_oem7_msgs tracetools tracetools_test /' /home/carma/.ci-image/engineering_tools/code_coverage/make_with_coverage.bash
        make_with_coverage.bash -m -e /opt/carma/ -o /opt/carma/coverage_reports/gcov

  build-ROS2:
    needs: set-environment
    runs-on: ubuntu-latest
    container:
      image: usdotfhwastoldev/autoware.ai:develop
      options: "--user root"
    steps:
    - name: Build ROS2
      run: |
        source "/home/carma/.base-image/init-env.sh"
        source "/opt/ros/foxy/setup.bash"
        source /opt/autoware.ai/ros/install_ros2/setup.bash
        PACKAGES=$(find . -maxdepth 2 -type f -name package.xml | sed 's/\.\///' | cut -d/ -f1) # maxdepth 2 Limits the search of package.xml to current directory and one level of subdirectories beneath it. find will not search beyond two levels deep from the starting point. Without this option, find would search the starting directory and all subdirectories recursively.
        sed -i 's/colcon build /colcon build --packages-skip novatel_oem7_msgs tracetools tracetools_test /' /home/carma/.ci-image/engineering_tools/code_coverage/make_with_coverage.bash
        make_with_coverage.bash -m -e /opt/carma/ -o ./coverage_reports/gcov

  test-ROS1:
    needs: build-ROS1
    runs-on: ubuntu-latest
    container:
      image: usdotfhwastoldev/autoware.ai:develop
      options: "--user root"
    steps:
    - name: Run ROS1 Tests
      run: |
        source "/home/carma/.base-image/init-env.sh"
        sed -i 's/colcon test /colcon test --packages-skip novatel_oem7_msgs tracetools tracetools_test /' /home/carma/.ci-image/engineering_tools/code_coverage/make_with_coverage.bash
        make_with_coverage.bash -t -e /opt/carma/ -o /opt/carma/coverage_reports/gcov

  test-ROS2:
    needs: build-ROS2
    runs-on: ubuntu-latest
    container:
      image: usdotfhwastoldev/autoware.ai:develop
      options: "--user root"
    steps:
    - name: Run ROS2 Tests
      run: |
        source "$INIT_ENV"
        source "$ROS_2_ENV"
        source /opt/autoware.ai/ros/install_ros2/setup.bash
        sed -i 's/colcon test /colcon test --packages-skip novatel_oem7_msgs tracetools tracetools_test carma_launch_testing carma_message_utilities ros2bag ros2trace tracetools_launch tracetools_read tracetools_trace rosbag2 /' /home/carma/.ci-image/engineering_tools/code_coverage/make_with_coverage.bash
        make_with_coverage.bash -t -e /opt/carma/ -o ./coverage_reports/gcov
  sonar-analysis:
    needs: [test-ROS1, test-ROS2]
    runs-on: ubuntu-latest
    container:
      image: usdotfhwastoldev/autoware.ai:develop
      options: "--user root"
    steps:
    - name: Combine compile_commands.json for SonarScanner
      run: |
        jq -s add /opt/carma/compile_commands.ros1.json /opt/carma/compile_commands.ros2.json > /opt/carma/build/compile_commands.json
    - name: Run SonarScanner
      uses: usdot-fhwa-stol/actions/sonar-scanner@main
      with:
        sonar-token: ${{ secrets.SONAR_TOKEN }}
        working-dir: "/opt/carma/src/${{ needs.checkout.outputs.repository-name }}"
